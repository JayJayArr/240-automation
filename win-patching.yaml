---
# Tasks to patch a Windows Server
- name: Windows update playbook
  # gather_facts: no
  hosts: windows
  strategy: free
  vars:
    ansible_user: "Administrator"
    ansible_port: 22
    ansible_ssh_common_args: "-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"
    ansible_ssh_retries: 3
    ansible_shell_type: powershell
    ansible_become_method: runas
    ansible_become_user: "{{ ansible_user }}"
    reject_list: ["KB1111111"]
  become: true

  tasks:
    # Ensure the logging directory does exist, if not create it
    - name: Proof the logging path does exist
      become: true
      ansible.windows.win_file:
        path: C:\Automation\logs\update
        state: directory

    # - name: "Run Update Session Orchestrator check to clear GUI cached results"
    #   ansible.windows.win_shell: |
    #     Stop-Service -Name BITS,WaaSMedicSvc,WUAUSERV,CryptSvc -Force
    #     Remove-Item -Path C:\Windows\System32\catroot2 -Recurse -Force
    #     Remove-Item -Path C:\Windows\SoftwareDistribution -Recurse -Force
    #     Start-Service -Name BITS,WaaSMedicSvc,WUAUSERV,CryptSvc
    #     UsoClient RefreshSettings
    #     UsoClient ScanInstallWait

    # Determine the current time, to be used with the log-file later
    - name: Get current date and time
      become: true
      ansible.windows.win_shell: '[int64](Get-Date -UFormat "%s")'
      register: current_time
      # delegate_to: localhost
      changed_when: false
    #
    # # Set the log-file name
    - name: Set log-file name
      ansible.builtin.set_fact:
        log_file_name: "win-updates-log-{{ current_time.stdout | trim }}.txt"

    # First search for pending patches of all categories
    - name: Check for available updates
      ansible.windows.win_updates:
        category_names: "*"
        reject_list: "{{ reject_list }}"
        state: searched
        server_selection: default
        log_path: "C:\\Automation\\logs\\update\\{{ log_file_name }}"
      register: update_result

    # Print the result in human readable format
    - name: update check results
      debug:
        var: update_result

    # Apply pending patches of all categories
    - name: Apply pending updates
      ansible.windows.win_updates:
        category_names: "*"
        reject_list: "{{ reject_list }}"
        state: installed
        server_selection: default
        reboot: true
        reboot_timeout: 1800
        log_path: "C:\\Automation\\logs\\update\\{{ log_file_name }}"
      register: apply_result
      # become: true
      retries: 2
      delay: 60
      until: apply_result is succeeded
      ignore_errors: yes

      # Print the result in human readable format
    - name: Output update application results
      debug:
        var: apply_result
